red me

this is about C version of matpic, lua file is older test implementation
to build, either copy Makefile.watcom to Makefile and run "wmake" if you are using openwatcom
or on linux/unix copy or link Makefile.nix to Makefile and run "make"
currently only 14bit PIC chips are supported
synopsis
	matpic [-d|p|P|t]
	cat <infile> | matpic [-d|p|P|t] > <outfile>
options
	-d	disassemble
  	-p	only preprocess
	-P	don't preprocess
	-t	after assembling instead of giving ihex output, disassemble again
input file is read from stdin, output written to stdout
comments can be started with ";", they end together with the line
multiline or part-of line comments can be started with "/*" and ended with "*/", they can also be nested
+ - * / % & | ^ << >> ~ ! == != > < >= <= () behave as in C,
 except that &, ^ and | have higher precedence than the comparison operators (<, >, <=, >=, ==, !=)
$ is the address at start of line
identifiers can be described by regex as /[a-zA-Z_][a-zA-Z0-9]*/
lines are divided as follows:
	[<label>] [<instruction> [<argument>, <...>]]
if an identifier is neither a directive or instruction and present before any whitespace, it's considered a label
if an identifier is followed by a (and before any instruction/directive) ':' it's considered a label
if an identifier starts with a '.' it's considered a local label (it can also be given a : at the end)
more dots before a local label make it local to a local label and so on
you can call a local label out of its scope like label.locallabel
following directives exist:
	org <origin>: set origin
	data <value>, <value>: put stray words into bytecode
	file "<filename>": tell assembler what file it is working on (also sets next line # to 1)
		filenames with double quotes or newlines and stuff in them are not support (no escape codes)
	line <line #>: tell assembler what the next line is numbered
also there is preprocessor directives:
	define, if, ifdef, ifndef, else, endif: behave mostly like C
	msg "<message>": show a message
	warning "<message>" show a threatning message
	error "<message>": show a deadly message
	they don't need # like in C (though it is allowed, you even can use % like in nasm)
integer notation supports the following prefixes:
	none at all: decimal
	0d: decimal
	0x: hexadecimal
	0b: binary
	0o: octal
	0: octal
underscores within integers are ignored (but not in prefix plz)
utf-8 in labels / macro names etc are allowed
