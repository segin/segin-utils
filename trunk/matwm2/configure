#!/bin/sh

# defaults
default_prefix="/usr/local"
default_mandir="/usr/local/man"
default_cc="cc"
default_rm="rm -f"
shape="yes"
xinerama="yes"
xft="yes"
vfork="yes"
debug="no"

# make sure a few variables are not set
unset prefix
unset mandir
unset cc
unset rm

# function to print usage instructions
usage() {
	echo "Usage: $0 [options]"
	echo
	echo "Options: (defaults between brackets)"
	echo "	--prefix=[/usr/local]    Set the prefix in wich to install binaries"
	echo "	--mandir=[/usr/local]    Set which directory to install manual pages in"
	echo "	--cc=[cc]                Set the compiler"
	echo "	--rm=[rm -f]             Set the command to delete files"
	echo "	--disable-shape          Disable support for shaped windows"
	echo "	--disable-xinerama       Disable support for xinerama"
	echo "	--disable-xft            Disable support for Xft"
	echo "	--disable-vfork          Disable use of the vfork() system call"
	echo "	--enable-debug           Enable debugging output"
	echo "	-h, --help               Print this message and exit"
	echo
	echo "Influential environment variables:"
	echo "	PREFIX    Prefix for installing binaries"
	echo "	MANDIR    Directory for installing man pages"
	echo "	CC        Compiler"
	echo "	RM        Command for deleting files"
	echo
	echo "Send comments, suggestions and bugs to Mattis Michel <sic_zer0@hotmail.com>"
}

# process command line arguments
echo "processing command line arguments..."
for opt in $*; do
	case $opt in
	--prefix=*)         prefix=`echo $opt | cut -d '=' -f 2`
	                    echo "	prefix explicitly set to $prefix";;
	--mandir=*)         mandir=`echo $opt | cut -d '=' -f 2`
	                    echo "	man directory explicitly set to $mandir";;
	--cc=*)             cc=`echo $opt | cut -d '=' -f 2`
	                    echo "	compiler explicitly set to $cc";;
	--rm=*)             rm=`echo $opt | cut -d '=' -f 2`
	                    echo "	rm command explicitly set to $rm";;
	--disable-shape)    shape="no"
	                    echo "	shaped windows support explicitly disabled";;
	--disable-xinerama) xinerama="no"
	                    echo "	xinerama support explicitly disabled";;
	--disable-xft)      xft="no"
	                    echo "	Xft support explicitly disabled";;
	--disable-vfork)    vfork="no"
	                    echo "	use of vfork system call explicitly disabled";;
	--enable-debug)     debug="yes"
	                    echo "	debugging output enabled explicitly";;
	-h)                 usage
	                    exit;;
	--help)             usage
	                    exit;;
	*)                  echo "	error: invalid argument \"$opt\""
	                    usage
											exit 1;;
	esac
done

# look for interesting environment variables
echo "looking for environment variables..."
if [ -z "$prefix" ]; then
	if [ -n "$PREFIX" ]; then
		prefix="$PREFIX"
		echo "	default prefix overridden by environment variable \$PREFIX ($prefix)"
	fi
fi

if [ -z "$mandir" ]; then
	if [ -n "$MANDIR" ]; then
		mandir="$MANDIR"
		echo "	default man directory overridden by environment variable \$MANDIR ($mandir)"
	fi
fi

if [ -z "$cc" ]; then
	if [ -n "$CC" ]; then
		cc="$CC"
		echo "	default compiler overridden by environment variable \$CC ($cc)"
	fi
fi

if [ -z "$rm" ]; then
	if [ -n "$RM" ]; then
		rm="$RM"
		echo "	default rm command overridden by environment variable \$RM ($rm)"
	fi
fi

# use the defaults for variables not set yet
if [ -z "$prefix" ];    then prefix="$default_prefix"; fi
if [ -z "$mandir" ];    then mandir="$default_mandir"; fi
if [ -z "$cc" ];        then cc="$default_cc"; fi
if [ -z "$rm" ];        then rm="$default_rm"; fi

# check if we have pkg-config
echo -n "checking for pkg-config... "
if which pkg-config 2>&1 > /dev/null; then
	echo "ok"
else
	echo "not found"
	echo "error: this script needs pkg-config"
	exit 1
fi

# check what libraries exist
echo -n "checking for Xlib... "
if pkg-config --exists x11 2> /dev/null; then
	echo "ok"
else
	echo "not found"
	echo "error: we need Xlib" 1>&2
	exit 1
fi

if [ "$shape" = "yes" ]; then
	echo -n "checking for Xext (for shaped windows support)... "
	if pkg-config --exists xext 2> /dev/null; then
		echo "ok"
	else
		echo "not found, disabling shaped windows support"
		shape="no"
	fi
fi

if [ "$xinerama" = "yes" ]; then
	echo -n "checking for Xinerama... "
	if pkg-config --exists xinerama 2> /dev/null; then
		echo "ok"
	else
		echo "not found, disabling xinerama support"
		xinerama="no"
	fi
fi

if [ "$xft" = "yes" ]; then
	echo -n "checking for Xft... "
	if pkg-config --exists xft 2> /dev/null; then
		echo "ok"
	else
		echo "not found, disabling Xft support"
		xft="no"
	fi
fi

if [ "$debug" = "yes" ]; then
	echo -n "checking for X protocol headers (for debugging output)... "
	if pkg-config --exists xproto 2> /dev/null; then
		echo "ok"
	else
		echo "not found, disabling debugging output"
		debug="no"
	fi
fi

# gather data from pkg-config etc
echo -n "gathering information... "
libraries="x11"
unset defines

if [ "$shape" = "yes" ]; then
	libraries="$libraries xext"
	defines="$defines -DUSE_SHAPE"
fi

if [ "$xinerama" = "yes" ]; then
	libraries="$libraries xinerama"
	defines="$defines -DUSE_XINERAMA"
fi

if [ "$xft" = "yes" ]; then
	libraries="$libraries xft"
	defines="$defines -DUSE_XFT"
fi

if [ "$vfork" = "yes" ]; then
	defines="$defines -DHAVE_VFORK"
fi

if [ "$debug" = "yes" ]; then
	libraries="$libraries xproto"
	defines="$defines -DDEBUG"
fi

defines=`echo $defines` # this serves to strip whitespace

cflags=`pkg-config --cflags $libraries`
ldflags=`pkg-config --libs-only-L $libraries`
libs=`pkg-config --libs-only-l $libraries`
echo "done"

# let the sedding begin
echo -n "generating Makefile from Makefine.in... "
sed -e "s#%PREFIX%#${prefix}#g"\
    -e "s#%MANDIR%#${mandir}#g"\
    -e "s#%CC%#${cc}#g"\
    -e "s#%RM%#${rm}#g"\
    -e "s#%DEFINES%#${defines}#g"\
    -e "s#%CFLAGS%#${cflags}#g"\
    -e "s#%LDFLAGS%#${ldflags}#g"\
    -e "s#%LIBS%#${libs}#g"\
		Makefile.in > Makefile
echo "done"

# print summary of configuration done
echo "summary:"
echo "	prefix:                 $prefix"
echo "	man directory:          $mandir"
echo "	compiler:               $cc"
echo "	rm command:             $rm"
echo "	shaped windows support: $shape"
echo "	xinerama support:       $xinerama"
echo "	Xft support:            $xft"
echo "	vfork system call:      $vfork"
echo "	debugging output:       $debug"
